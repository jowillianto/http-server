/*
  Contains string parsing utilities used for http parsing. This might be considered to be moved into
  its own parsing library.
*/
module;
#include <algorithm>
#include <ranges>
#include <string_view>
export module moderna.http:parse_util;

namespace moderna::http {
#define SPACE_CHAR 0x20
#define TAB_CHAR 0x09
#define CARRIAGE_RETURN_CHAR 0x0D
#define LINE_FEED_CHAR 0x0A
  constexpr bool is_space(char x) noexcept {
    return x == SPACE_CHAR || x == TAB_CHAR || x == CARRIAGE_RETURN_CHAR || x == LINE_FEED_CHAR;
  }
#undef SPACE_CHAR
#undef TAB_CHAR
#undef CARRIAGE_RETURN_CHAR
#undef LINE_FEED_CHAR

  /*
    Removes whitespace from both ends of a string view and returns another string view.
  */
  constexpr std::string_view strip_space(std::string_view v) noexcept {
    return std::string_view{
      std::ranges::find_if_not(v, is_space),
      std::ranges::find_if_not(std::ranges::reverse_view(v), is_space).base()
    };
  }
}